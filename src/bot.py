import os
import logging
import random
import requests
from aiogram import Bot, Dispatcher, executor, types

BOT_TOKEN = os.getenv("BOT_TOKEN")
DECK_URL = os.getenv("DECK_URL")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –ó–∞–≥—Ä—É–∂–∞–µ–º JSON –∫–æ–ª–æ–¥—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
deck = {}
try:
    r = requests.get(DECK_URL)
    r.raise_for_status()
    deck = r.json()
except Exception as e:
    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–ª–æ–¥—É: {e}")

cards = deck.get("cards", [])
base_url = deck.get("image_base_url", "")

@dp.message_handler(commands=["start", "help"])
async def send_welcome(message: types.Message):
    await message.answer(
        "üîÆ –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –¢–∞—Ä–æ-–±–æ—Ç.\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã:\n"
        "/onecard ‚Äî –æ–¥–Ω–∞ –∫–∞—Ä—Ç–∞ (—Å–æ–≤–µ—Ç)\n"
        "/threecards ‚Äî —Ç—Ä–∏ –∫–∞—Ä—Ç—ã (–ø—Ä–æ—à–ª–æ–µ/–Ω–∞—Å—Ç–æ—è—â–µ–µ/–±—É–¥—É—â–µ–µ)\n\n"
        "–ü–æ–º–Ω–∏—Ç–µ: –≤—Å–µ —Ä–µ—à–µ–Ω–∏—è –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Å–∞–º–∏ ‚ú®"
    )

@dp.message_handler(commands=["onecard"])
async def one_card(message: types.Message):
    card = random.choice(cards)
    img = base_url + card["image"]
    await message.answer_photo(img, caption=f"üîÆ {card['title_ru']} ({card['title_en']})")

@dp.message_handler(commands=["threecards"])
async def three_cards(message: types.Message):
    sample = random.sample(cards, 3)
    captions = ["–ü—Ä–æ—à–ª–æ–µ", "–ù–∞—Å—Ç–æ—è—â–µ–µ", "–ë—É–¥—É—â–µ–µ"]
    for c, title in zip(sample, captions):
        img = base_url + c["image"]
        await message.answer_photo(img, caption=f"{title}: {c['title_ru']} ({c['title_en']})")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
